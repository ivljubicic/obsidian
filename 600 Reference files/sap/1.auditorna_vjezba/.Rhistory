knitr::opts_chunk$set(echo = TRUE)
library(help = "datasets")
help(iris) #help ili ?iris inače dosta korisna funkcija
# Učitavanje built-in dataseta i pregled samo prvih nekoliko redaka
irisdata = iris
head(irisdata)
#irisdata
knitr::include_graphics("iris-machinelearning.png")
knitr::include_graphics("iris_petal-sepal-width-length.png")
# Dimenzije dataseta:
dim(irisdata)  # broj redaka, broj stupaca (broj primjera, broj varijabli)
nrow(irisdata) # broj redaka
ncol(irisdata) # broj stupaca -> što daje length?
names(irisdata) # imena stupaca
class(irisdata)
# Uvodna analiza, pristup stupcima data.frame objekta preko imena pomocu operatora $
irisdata$Sepal.Length
class(irisdata$Petal.Width)
# klasa ove varijable je "numeric" -- varijabla na intervalnoj/racionalnoj skali - koja od njih u ovom slučaju?
irisdata$Species
class(irisdata$Species)
# klasa ove varijable je "factor" -- varijabla na nominalnoj/ordinalnoj skali - koja od njih u ovom slučaju?
# Indeksiranje
# Jedan indeks izdvaja stupac ili sve osim određenih stupaca
irisdata[2]
irisdata[c(2,4)]
irisdata[-c(2,4)]
# Kod vektora od dva indeksa prvi predstavlja redak a drugi stupac
irisdata[c(2,5,6), 3:5]
# primijetiti razliku:
# retci 3 i 4 i svi stupci
irisdata[c(3,4),]
# svi retci i stupci 3 i 4
irisdata[,c(3,4)]
irisdata[c(3,4)]
# Još osnovnih manipulacija stupcima:
irisdata[c(2,5,6), c("Sepal.Width","Species")]
irisdata[c(2,5,6), -c(5)]
# Izdvojiti sve redove gdje je Sepal Width veći od 3.3:
irisdata[irisdata$Sepal.Width > 3.3,]
# Izdvojiti sve stupce osim stupca Species:
irisdata[names(irisdata) != "Species"]
# Izdvojiti sve stupce koji opisuju duljinu:
irisdata[names(irisdata) %in% c("Sepal.Length","Petal.Length")]
# Ispisati sve Sepal Width za koji je Petal Length veci od 1.4:
irisdata$Sepal.Width[irisdata$Petal.Length > 1.4]
# ili:
irisdata[irisdata$Petal.Length > 1.4,]$Sepal.Width
# Izdvojiti sve pozicije (indekse) za koje vrijedi uvjet Sepal.Width > 3.3 i ispisati sve pripadne primjere:
ind = which(irisdata$Sepal.Width > 3.3)
irisdata$Sepal.Width > 3.3
ind
irisdata[ind,]
# Aritmeticka sredina - mean
mean(irisdata$Petal.Length)
# Podrezana aritmeticka sredina s uklanjanjem po 20% najmanjih i najvecih podataka
mean(irisdata$Petal.Length, trim=0.2)
# Medijan - robusna mjera centralne tendencije(točno 50% podataka je manje i 50% podataka veće od te vrijednosti)
median(irisdata$Petal.Length)
# 1., 2. i 3. kvartil
quantile(irisdata$Petal.Length, probs = c(0.25,0.5,0.75)) # Koji kvartil je ujedno i medijan?
# Mod (most frequent value) - vrijednost koja se najčešće pojavljuje u podatcima. Kada ova mjera ima smisla?
require(modeest)
mfv(irisdata$Petal.Length)
# Rang- razlika između najvećeg i najmanjeg iznosa u podatcima
max(irisdata$Petal.Length)-min(irisdata$Petal.Length)
# Interkvartilni rang - razlika trećeg i prvog kvartila podataka --> Zašto je ovo robusnija mjera od prethodne?
IQR(irisdata$Petal.Length)
# Varijanca i standardna devijacija - najčešće korištene mjere rasipanja
var(irisdata$Petal.Length)
sd(irisdata$Petal.Length)
sqrt(var(irisdata$Petal.Length))
# Računa li var() nepristranu procjenu varijance?
help(var)
# Koeficijent varijacije -  relativna mjera rasipanja koja opisuje rasipanje podataka u odnosu na njihovu aritmetičku sredinu. Kada ima smisla koristiti ovu mjeru?
#suppressWarnings(require(raster,quietly = TRUE))
#cv(irisdata$Petal.Length)
sd(irisdata$Petal.Length)/mean(irisdata$Petal.Length)
# Osnovna deskriptivna statistika:
summary(irisdata)
# tidyverse - vrlo koristan skup biblioteka koji omogućuje jos elegantniju manipulaciju data frame-ovima
# https://www.tidyverse.org/packages/
library(tidyverse)
irisdata %>% group_by(Species) %>% summarise(
Mean.Sep.Len = mean(Sepal.Length),
Mean.Pet.Len = mean(Petal.Length),
Mean.Sep.Wid = mean(Sepal.Width),
Mean.Pet.Wid = mean(Petal.Width)
) -> summary.result1
summary.result1
irisdata %>% group_by(Species) %>% summarise(
Med.Sep.Len = median(Sepal.Length),
Med.Pet.Len = median(Petal.Length),
Med.Sep.Wid = median(Sepal.Width),
Med.Pet.Wid = median(Petal.Width)
) -> summary.result2
summary.result2
# Podrezana srednja vrijednost - zašto je ovo robusnija metoda u odnosu na običnu srednju vrijednost?
irisdata %>% group_by(Species) %>% summarise(
MeanTr.Sep.Len = mean(Sepal.Length, trim = 0.1),
MeanTr.Pet.Len = mean(Petal.Length, trim = 0.1),
MeanTr.Sep.Wid = mean(Sepal.Width, trim = 0.1),
MeanTr.Pet.Wid = mean(Petal.Width, trim = 0.1)
) -> summary.result3
summary.result3
# Do sada smo računali mjere centralne tendencije za sve vrste zajedno - ali vidimo da kad ih razdvojimo po grupama, vrste se grupiraju oko potencijalno različitih vrijednosti
# Usporedite razliku između medijana i meana za petal length izračunatih za sve vrste zajedno, potom izračunatih za sve vrste posebno.
# Pomoću summary-ja statistike za pojedinu vrstu:
summary(irisdata[irisdata["Species"] == c("setosa"),])
summary(irisdata[irisdata["Species"] == c("versicolor"),])
summary(irisdata[irisdata["Species"] == c("virginica"),])
# Još jedan način:
aggregate(irisdata[names(irisdata) != "Species"], list(irisdata$Species), mean)
aggregate(irisdata[names(irisdata) != "Species"], list(irisdata$Species), median)
aggregate(irisdata[names(irisdata) != "Species"], list(irisdata$Species), mean,trim=0.1)
# Prednost tidyverse-a?
irisdata %>% group_by(Species) %>% summarise(
IQR.Sep.Len = IQR(Sepal.Length),
IQR.Pet.Len = IQR(Petal.Length),
IQR.Sep.Wid = IQR(Sepal.Width),
IQR.Pet.Wid = IQR(Petal.Width)
) -> summary.result
summary.result
irisdata %>% group_by(Species) %>% summarise(
sd.Sep.Len = sd(Sepal.Length),
sd.Pet.Len = sd(Petal.Length),
sd.Sep.Wid = sd(Sepal.Width),
sd.Pet.Wid = sd(Petal.Width)
) -> summary.result
summary.result
# Usporedite opet razliku ovih mjera za petal length izračunatih za sve vrste zajedno, potom izračunatih za sve vrste posebno.
# Možemo li iz ovih statistika zaključiti nešto o varijabilnosti i raspršenosti sepal length-a različitih vrsta irisa? Na što bi mogao upućivati različit redoslijed veličina ovih dviju mjera? Kasnije se na box plotu sepal length-a može vidjeti da vrsta virginica ima stršeću vrijednost upravo za sepal length.
# Kada je koja od ovih mjera rasipanja primjenjivija? Koja je primjenjivija za iris dataset?
h = hist(irisdata$Sepal.Length,
breaks=3,
main="Sepal length histogram, breaks = 3",
xlab="Sepal length [cm]",
ylab='Frequency',
col="blue"
)
h = hist(irisdata$Sepal.Length,
breaks=100,
main="Sepal length histogram, breaks = 100",
xlab="Sepal length [cm]",
ylab='Frequency',
col="blue"
)
h = hist(irisdata$Sepal.Length,
main="Sepal length histogram, breaks = ?",
xlab="Sepal length [cm]",
ylab='Frequency',
col="blue"
)
abline(v = mean(irisdata$Sepal.Length), col = "red", lwd = 4)
# Možemo li iz ovog histograma isčitati da se radi o multimodalnoj distribuciji?
h = hist(irisdata$Petal.Length,
main="Petal length histogram",
xlab="Petal length [cm]",
ylab='Frequency',
ylim= c(0,40)
)
mfv(irisdata$Petal.Length)
h = hist(irisdata$Sepal.Length,
breaks=15,
main="Sepal length histogram, breaks = 15",
xlab="Sepal length [cm]",
ylab='Frequency',
col="lightblue"
)
# Histogram duljine lapa s cca. 15 razreda (broj razreda shvaca kao "sugestiju")
# Kako možemo doći do breakpoint-ova:
h$breaks
length(h$breaks)
# Ako želimo dati točan broj razreda, moramo definirati točke breakpoint-ova
b = seq(min(irisdata$Sepal.Length) - 0.1,max(irisdata$Sepal.Length) + 0.1,0.2)
length(b)
h = hist(irisdata$Sepal.Length,
breaks=b,
main="Sepal length histogram",
xlab="Sepal length [cm]",
ylab='Frequency',
col="lightblue"
)
# Broj razreda i frekvencije:
length(h$breaks)
h$counts
# Histogram s prikazom relativnih frekvencija:
h = hist(irisdata$Sepal.Length,
prob=TRUE,
breaks=15,
main="Sepal length histogram",
xlab="Sepal length [cm]",
ylab='Frequency',
col="lightblue"
)
# Broj razreda i relativne frekvencije:
length(h$breaks)
h$density
# Ako već imamo frekvencije:
data.counts = h$counts
barplot(data.counts,
main="Sepal length histogram",
xlab="Sepal length [cm]",
ylab='Frequency',
col="pink")
data.counts = h$density
barplot(data.counts,
main="Sepal length histogram",
xlab="Sepal length [cm]",
ylab='Frequency',
col="pink")
# Ako grupiramo podatke i onda radimo histogram:
b = seq(min(irisdata$Sepal.Length) - 0.1,max(irisdata$Sepal.Length) + 0.1,0.2)
h1 = hist(irisdata[irisdata["Species"] == c("setosa"),]$Sepal.Length,
breaks=b,
plot=FALSE)
h2 = hist(irisdata[irisdata["Species"] == c("versicolor"),]$Sepal.Length,
breaks=b,
plot=FALSE)
h3 = hist(irisdata[irisdata["Species"] == c("virginica"),]$Sepal.Length,
breaks=b,
plot=FALSE)
data <- t(cbind(h1$counts,h2$counts,h3$counts))
data
barplot(data,beside=TRUE, col=c("lightblue", "purple", "lightgreen"), xlab="Sepal length [cm]", ylab='Frequency',)
legend("topleft",c("setosa","versicolor","virginica"),fill = c("lightblue", "purple", "lightgreen"))
# Pravokutni dijagram versicolor vrste za duljinu lapa:
boxplot(irisdata[irisdata["Species"]=="versicolor",]$Sepal.Length,
main='Sepal length box-plot',
ylab='Sepal length [cm]')
# Vrijednosti pravokutnog dijagrama dolaze iz deskriptivne statistike:
summary(irisdata[irisdata["Species"]=="versicolor",]$Sepal.Length)
# Pravokutni dijagrami vrsta za duljinu lapa:
boxplot(Sepal.Length ~ Species,data=irisdata)
aggregate(irisdata[names(irisdata) != "Species"]$Sepal.Length, list(irisdata$Species), median)
summary(irisdata[irisdata["Species"]=="virginica",]$Sepal.Length)
boxplot(irisdata[irisdata["Species"]=="virginica",]$Sepal.Length,
main='Sepal length box-plot',
ylab='Sepal length [cm]',
range=1.5)
# Ne razlikujemo vrste irisa:
plot(irisdata$Sepal.Length,irisdata$Sepal.Width,
col="blue",
xlab='Sepal length [cm]',
ylab='Sepal width [cm]')
# Razlikujemo vrste irisa:
plot(irisdata$Sepal.Length[irisdata$Species=='setosa'],
irisdata$Sepal.Width[irisdata$Species=='setosa'],
col='blue',
xlim=c(min(irisdata$Sepal.Length),max(irisdata$Sepal.Length)),
ylim=c(min(irisdata$Sepal.Width),max(irisdata$Sepal.Width)),
xlab='Sepal length [cm]',
ylab='Sepal width [cm]')
points(irisdata$Sepal.Length[irisdata$Species=='versicolor'],
irisdata$Sepal.Width[irisdata$Species=='versicolor'],col='red')
points(irisdata$Sepal.Length[irisdata$Species=='virginica'],
irisdata$Sepal.Width[irisdata$Species=='virginica'],col='green')
# Provjerimo kako izgleda scatterplot za latice:
plot(irisdata$Petal.Length[irisdata$Species=='setosa'],
irisdata$Petal.Width[irisdata$Species=='setosa'],
col='blue',
xlim=c(min(irisdata$Petal.Length),max(irisdata$Petal.Length)),
ylim=c(min(irisdata$Petal.Width),max(irisdata$Petal.Width)),
xlab='Petal length [cm]',
ylab='Petal width [cm]')
points(irisdata$Petal.Length[irisdata$Species=='versicolor'],
irisdata$Petal.Width[irisdata$Species=='versicolor'],col='red')
points(irisdata$Petal.Length[irisdata$Species=='virginica'],
irisdata$Petal.Width[irisdata$Species=='virginica'],col='green')
# Učitavanje podataka iz csv datoteke:
iris.modif = read.table("iris_mod.txt")
head(iris.modif)
iris.modif = read.table("iris_mod.txt", sep = ",")
head(iris.modif)
dim(iris.modif)
class(iris.modif$Species)
# Klasa je integer - to ne želimo jer se radi o tipu irisa --> kategorijska varijabla!
iris.modif$Species = as.factor(iris.modif$Species)
class(iris.modif$Species)
iris.modif$Species
iris.modif$Petal.Width
# is.na ce nam vratiti logical vektor koji ima TRUE na mjestima gdje pod$Petal.Length ima NA:
sum(is.na(iris.modif$Petal.Length)) # Koliko?
sum(is.na(iris.modif$Sepal.Length)) # Koliko?
sum(is.na(iris.modif$Petal.Width)) # Koliko?
sum(is.na(iris.modif$Sepal.Width)) # Koliko?
sum(is.na(iris.modif$Species)) # Koliko?
# complete.cases ce vratiti logical vrijednost za svaki redak;
# Vrijednost je FALSE --> barem jedan element retka NA
sum(!complete.cases(iris.modif))
# Koji su to retci?
iris.modif[!complete.cases(iris.modif),]
# Izbacit ćemo nedostajuce vrijednosti
iris.modif.full = iris.modif[complete.cases(iris.modif),]
iris.modif.full %>% group_by(Species) %>% summarise(
count = n())
summary(iris.modif.full)
boxplot(Petal.Width ~ Species,data=iris.modif.full)
iris.modif.full %>% group_by(Species) %>% summarise(
sd = sd(Petal.Width),
IQR = IQR(Petal.Width),
mean= mean(Petal.Width)
) -> summary.result
summary.result
plot(iris.modif.full$Petal.Width[iris.modif.full$Species==1],
col='blue',
ylim=c(min(iris.modif.full$Petal.Width),max(iris.modif.full$Petal.Width)),
ylab='Petal width [cm]')
points(iris.modif.full$Petal.Width[iris.modif.full$Species==2],col='red')
points(iris.modif.full$Petal.Width[iris.modif.full$Species==3],col='dark green')
ind = which(iris.modif.full$Petal.Width >20)
iris.modif.full[ind,]
iris.cleaned = iris.modif.full[-ind,]
summary(iris.cleaned)
# Ako želimo dati točan broj razreda, moramo definirati točke breakpoint-ova
b = seq(min(irisdata$Sepal.Length) - 0.1,max(irisdata$Sepal.Length) + 0.1,0.2)
length(b)
h = hist(irisdata$Sepal.Length,
breaks=b,
main="Sepal length histogram",
xlab="Sepal length [cm]",
ylab='Frequency',
col="lightblue"
)
# Broj razreda i frekvencije:
length(h$breaks)
h$counts
# Histogram s prikazom relativnih frekvencija:
h = hist(irisdata$Sepal.Length,
prob=TRUE,
breaks=15,
main="Sepal length histogram",
xlab="Sepal length [cm]",
ylab='Frequency',
col="lightblue"
)
# Broj razreda i relativne frekvencije:
length(h$breaks)
h$density
